[tool.poetry]
name = "creat"
version = "0.6.7"
description = "experimental .."
authors = ["Your Name <you@example.com>"]
license = "LGPL"
packages = [
    { include = "creat" }
]

[tool.poetry.scripts]
creat = 'creat.__main__:app'

[tool.poetry.dependencies]
python = "^3.9"
Jinja2 = "^3.0.3"
loguru = "^0.6.0"
rich = "^12.0.0"
#copier = "^5.1.0"
typer = "^0.4.0"
colorama = "^0.4.4"
#shellingham = "^1.4.0" # does not work on windows
watchgod = "^0.8"
pydantic = "^1.8.2"
typing-extensions = "^4.0.0"
"ruamel.yaml" = "^0.17.16"
multidict = "^6.0.2"
doit = "^0.34.2"

[tool.poetry.dev-dependencies]
pre-commit = "^3"
mypy = "^1"
ruff = "^0.1"


[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.black]
line-length = 100

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.coverage.run]
branch = true
command_line = '-m pytest'
source = ['creat/']

[tool.coverage.report]
precision = 2
skip_covered = true
fail_under = 90

[tool.pylint.similarities]
min-similarity-lines = 11
ignore-docstrings = true
ignore-comments = true
ignore-imports = true

[tool.pylint.'MESSAGES CONTROL']
max-line-length = 100
disable = [
    "consider-using-f-string",
    "global-statement",
    "import-error",
    "import-outside-toplevel",
    "invalid-name",
    "missing-class-docstring",
    "missing-function-docstring",
    "missing-module-docstring",
    "too-few-public-methods",
    "undefined-loop-variable",
    "protected-access",
    "no-self-use",
    "broad-except",
    "too-many-function-args",
]

[tool.mypy]
python_version = "3.8"
exclude = "^docs/"
show_error_context = false
show_column_numbers = false
show_error_codes = true
pretty = true
color_output = true
error_summary = false
show_absolute_path = false
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = false
warn_no_return = true
warn_return_any = false
warn_unreachable = false
allow_untyped_globals = false
allow_redefinition = false
local_partial_types = false
implicit_reexport = true
disable_error_code = "misc"
ignore_missing_imports = true

[tool.pycln]
all = true
